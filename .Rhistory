library(abmr)
library(raster)
ndvi_raster=stack("C:\\Users\\BGOCHANOUR\\Documents\\GitHub\\move-model\\Input_Data\\NDVI_2013.gri")
data(NOAM)
plot(ndvi_raster)
data(N_pop)
moveSIM_helper(N_pop,ndvi_raster,27,1,-100,25,1,1,NOAM,375)
test=moveSIM_helper(N_pop,ndvi_raster,27,1,-100,25,1,1,NOAM,375)
test
testing2=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM)
library(abmr)
testing2=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM)
library(abmr)
testing2=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM)
testing2
View(testing2)
View(testing2)
library(abmr)
testing2=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM,optimum=.5)
library(abmr)
testing2=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM,optimum=.5)
testing2
library(abmr)
testing2=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM,optimum=.5)
testing2
View(testing2)
library(abmr)
testing2=moveSIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM,optimum=.5)
View(testing2)
View(testing2)
testing=energySIM(replicates=200,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.5, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,
modeled_species=N_pop, my_shapefile=NOAM,
my_optimum_lo=.5,my_optimum_hi=.6,my_init_energy=100)
library(abmr)
testing=energySIM(replicates=10,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,
modeled_species=N_pop, my_shapefile=NOAM,
my_optimum_lo=.5,my_optimum_hi=.6,my_init_energy=100)
testing2=moveSIM(replicates=10,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM,optimum=.5)
View(testing)
View(testing2)
View(testing)
library(abmr)
library(abmr)
testing=energySIM(replicates=10,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,
modeled_species=N_pop, my_shapefile=NOAM,
my_optimum_lo=.5,my_optimum_hi=.6,my_init_energy=100)
testing2=moveSIM(replicates=10,days=27,env_rast=ndvi_raster, search_radius=375,
my_sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM,optimum=.5)
View(testing)
View(testing2)
?moveSIM
?energySIM
qchisq(.95,3)
1-pchisq(3.71,2)
qchisq(.95,3)
#install and load the PMCMRplus package
install.packages("PMCMRplus")
library(PMCMRplus)
##ALL pairwise comparisons among 4 sites, large sample approximation
a<-dscfAllPairsTest(dat[1:4])
summary(a)
dat<-list(site.I=c(1.13,1.20,1.00,.91,1.05), site.II=c(1.75,1.45,1.55,1.64,1.60),
site.III=c(2.30,2.15,2.25,2.40,2.49), site.IV=c(3.18,3.10,3.28,3.35,3.12))
#install and load the PMCMRplus package
library(PMCMRplus)
##ALL pairwise comparisons among 4 sites, large sample approximation
a<-dscfAllPairsTest(dat[1:4])
summary(a)
species <- setClass("species", slots=c(x="numeric", y="numeric"))
species <- setClass("species", slots=c(x="numeric", y="numeric",mass="numeric",
wing="numeric"))
ocwa.pop <- species(x=-112.24, y =52.24, opt= 0.7, mass=15, wing=19)
ocwa.pop <- species(x=-112.24, y =52.24, mass=15, wing=19)
library(abmr)
load(NOAM)
data(NOAM)
data("ndvi_raster")
testing=energySIM(replicates=4,days=27,env_rast=ndvi_raster, search_radius=375,
sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,
modeled_species=N_pop, my_shapefile=NOAM,
optimum_lo=.4,optimum_hi=.6,init_energy=100,
direction="S",write_results=TRUE,single_rast=FALSE)
testing=energySIM(replicates=4,days=27,env_rast=ndvi_raster, search_radius=375,
sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,
modeled_species=N_pop, my_shapefile=NOAM,
optimum_lo=.4,optimum_hi=.6,init_energy=100,
direction="S",write_results=TRUE,single_rast=FALSE)
ndvi_raster=stack("C:\\Users\\BGOCHANOUR\\Documents\\GitHub\\move-model\\Input_Data\\NDVI_2013.gri")
ndvi_raster=stack("C:\\Users\\BGOCHANOUR\\Documents\\GitHub\\move-model\\Input_Data\\NDVI_2013.gri")
ndvi_raster=stack("C:\\Users\\BGOCHANOUR\\Documents\\GitHub\\move-model\\Input_Data\\NDVI_2013.gri")
library(raster)
ndvi_raster=stack("C:\\Users\\BGOCHANOUR\\Documents\\GitHub\\move-model\\Input_Data\\NDVI_2013.gri")
testing=energySIM(replicates=4,days=27,env_rast=ndvi_raster, search_radius=375,
sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,
modeled_species=N_pop, my_shapefile=NOAM,
optimum_lo=.4,optimum_hi=.6,init_energy=100,
direction="S",write_results=TRUE,single_rast=FALSE)
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
t.energy.res=testing$results
table1::table1(~distance | delta_energy, data = t.energy.res)
table1::table1(~energy + day + distance | delta_energy, data = t.energy.res)
table1::table1(~distance | delta_energy, data = t.energy.res)
table1::table1(~energy + day + distance | delta_energy, data = t.energy.res)
table1::table1(~energy + delta_energy, data = t.energy.res)
table1::table1(~energy + day + distance | delta_energy, data = t.energy.res)
testing$run_params
testing$run_params["dest_x"]
testing$results
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
energyVIZ(testing,title="Visualizing EnergySIM results",type="table")
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="table")
energyVIZ(testing,title="Visualizing EnergySIM results",type="table")
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
data=testing
data=testing
world <- ne_countries(scale = "medium", returnclass = "sf")
start.p <- cbind(data$results[1,1], data$results[1,2])
# Generalize this soon
start.p.df <- as.data.frame(start.p)
colnames(start.p.df)[1:2] = c("Lon", "Lat")
run = "ideal"
start.p.df <- cbind(start.p.df, run)
end.p <- cbind(data$run_params["dest_x"],data$run_params["dest_y"])
end.p.df <- as.data.frame(end.p)
colnames(end.p.df)[1:2] = c("Lon", "Lat")
end.p.df <- cbind(end.p.df, run)
ideal.df <- rbind(start.p.df, end.p.df)
t.energy.res <- data$results
ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-127, -78), ylim = c(10, 55), expand = FALSE) +
geom_path(data = t.energy.res,
aes(x=lon, y=lat),
color = "red", size = 0.6, alpha = 0.4, lineend = "round") +
geom_path(data = ideal.df,
aes(x=Lon, y=Lat),
color = "black", size = 1.2, alpha = 1, linetype = 2) +
ggtitle(title)
library(ggplot2)
data=testing
world <- ne_countries(scale = "medium", returnclass = "sf")
start.p <- cbind(data$results[1,1], data$results[1,2])
# Generalize this soon
start.p.df <- as.data.frame(start.p)
colnames(start.p.df)[1:2] = c("Lon", "Lat")
run = "ideal"
start.p.df <- cbind(start.p.df, run)
end.p <- cbind(data$run_params["dest_x"],data$run_params["dest_y"])
end.p.df <- as.data.frame(end.p)
colnames(end.p.df)[1:2] = c("Lon", "Lat")
end.p.df <- cbind(end.p.df, run)
ideal.df <- rbind(start.p.df, end.p.df)
t.energy.res <- data$results
ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-127, -78), ylim = c(10, 55), expand = FALSE) +
geom_path(data = t.energy.res,
aes(x=lon, y=lat),
color = "red", size = 0.6, alpha = 0.4, lineend = "round") +
geom_path(data = ideal.df,
aes(x=Lon, y=Lat),
color = "black", size = 1.2, alpha = 1, linetype = 2) +
ggtitle(title)
library(rnaturalearth)
library(rnaturalearthdata)
data=testing
world <- ne_countries(scale = "medium", returnclass = "sf")
start.p <- cbind(data$results[1,1], data$results[1,2])
# Generalize this soon
start.p.df <- as.data.frame(start.p)
colnames(start.p.df)[1:2] = c("Lon", "Lat")
run = "ideal"
start.p.df <- cbind(start.p.df, run)
end.p <- cbind(data$run_params["dest_x"],data$run_params["dest_y"])
end.p.df <- as.data.frame(end.p)
colnames(end.p.df)[1:2] = c("Lon", "Lat")
end.p.df <- cbind(end.p.df, run)
ideal.df <- rbind(start.p.df, end.p.df)
t.energy.res <- data$results
ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-127, -78), ylim = c(10, 55), expand = FALSE) +
geom_path(data = t.energy.res,
aes(x=lon, y=lat),
color = "red", size = 0.6, alpha = 0.4, lineend = "round") +
geom_path(data = ideal.df,
aes(x=Lon, y=Lat),
color = "black", size = 1.2, alpha = 1, linetype = 2) +
ggtitle(title)
ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-127, -78), ylim = c(10, 55), expand = FALSE) +
geom_path(data = t.energy.res,
aes(x=lon, y=lat),
color = "red", size = 0.6, alpha = 0.4, lineend = "round")
ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-127, -78), ylim = c(10, 55), expand = FALSE) +
geom_path(data = t.energy.res,
aes(x=lon, y=lat),
color = "red", size = 0.6, alpha = 0.4, lineend = "round") +
geom_path(data = ideal.df,
aes(x=Lon, y=Lat),
color = "black", size = 1.2, alpha = 1, linetype = 2)
ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-127, -78), ylim = c(10, 55), expand = FALSE) +
geom_path(data = t.energy.res,
aes(x=lon, y=lat),
color = "red", size = 0.6, alpha = 0.4, lineend = "round") +
geom_path(data = ideal.df,
aes(x=Lon, y=Lat),
color = "black", size = 1.2, alpha = 1, linetype = 2) +
ggtitle(title)
ggplot(data = world) +
geom_sf() +
coord_sf(xlim = c(-127, -78), ylim = c(10, 55), expand = FALSE) +
geom_path(data = t.energy.res,
aes(x=lon, y=lat),
color = "red", size = 0.6, alpha = 0.4, lineend = "round") +
geom_path(data = ideal.df,
aes(x=Lon, y=Lat),
color = "black", size = 1.2, alpha = 1, linetype = 2) +
ggtitle("mytitle")
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
library(abmr)
energyVIZ(testing,title="Visualizing EnergySIM results",type="plot")
energyVIZ(testing,title="Visualizing EnergySIM results",type="table")
testing2=moveSIM(replicates=1,days=27,env_rast=ndvi_raster, search_radius=375,
sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=N_pop,
my_shapefile=NOAM,optimum=.5,direction="S",write_results=TRUE,single_rast=FALSE)
data(NOAM)
testing2=moveSIM(replicates=1,days=27,env_rast=ndvi_raster, search_radius=375,
sigma=.4, dest_x=-100, dest_y=25, mot_x=1, mot_y=1,modeled_species=ocwa.pop,
my_shapefile=NOAM,optimum=.5,direction="S",write_results=TRUE,single_rast=FALSE)
testing2
?species
getwd()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",warning=FALSE,message=FALSE
)
data(NOAM)
plot(NOAM)
library(raster)
ndvi_raster=stack("C:\\Users\\BGOCHANOUR\\Documents\\GitHub\\move-model\\Input_Data\\NDVI_2013.gri")
plot(ndvi_raster)
species <- setClass("species", slots=c(x="numeric", y="numeric",mass="numeric",
wing="numeric"))
ocwa.pop <- species(x=-112.24, y =52.24, mass=15, wing=19)
table_10.12=matrix(c(2,3,3,12),byrow=T,ncol=2,nrow=2)
table_10.12
fisher.test(table_10.12,alternative = "two.sided")
pchisq(2.2222,1)
1-pchisq(2.2222,1)
table_10.12=matrix(c(1,2,2,0),byrow=T,ncol=2,nrow=2)
chisq.test(table_10.12)
table_10.12
chisq.test(table_10.12)
?chisq.test
chisq.test(table_10.12,correct=FALSE)
?species
library(abmr)
?species
?pchisq
1-pchisq(6.2805,1)
library(abmr)
