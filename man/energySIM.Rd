% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/energySIM.R
\name{energySIM}
\alias{energySIM}
\title{Runs more advanced Brownian / Ornstein Uhlenbeck agent-based model for
multiple replicates.}
\usage{
energySIM(
  replicates = 200,
  days,
  env_rast = ndvi_raster,
  search_radius = 375,
  sigma = 0.5,
  dest_x,
  dest_y,
  mot_x,
  mot_y,
  modeled_species,
  optimum_lo,
  optimum_hi,
  init_energy,
  direction = "S",
  mortality = TRUE,
  energy_adj = c(25, 20, 15, 10, 5, 0, -5, -10, -15, -20, -25),
  write_results = FALSE,
  single_rast = FALSE
)
}
\arguments{
\item{replicates}{Integer, desired number of replicates per run, default 200.}

\item{days}{Integer, How many days (timesteps) would you like to model? Range (1,nlayers(env_rast))}

\item{env_rast}{Rasterstack or Rasterbrick with number of layers >= days}

\item{search_radius}{Radius of semicircle search regions (in km). Default 375.}

\item{sigma}{Numeric, randomness parameter, range (-Infty, Infty). Default 0.5.}

\item{dest_x}{Numeric, destination x coordinate (longitude)}

\item{dest_y}{Numeric, destination y coordinate (latitude)}

\item{mot_x}{Numeric, movement motivation in x direction, range (0,1], default 1.}

\item{mot_y}{Numeric, movement motivation in y direction, range (0,1], default 1.}

\item{modeled_species}{Object of class "species"}

\item{optimum_lo}{Numeric, optimal environmental value (low)}

\item{optimum_hi}{Numeric, optimal environmental value (high)}

\item{init_energy}{Numeric, initial energy in interval (0,100]}

\item{direction}{Character, movement direction, one of "N","S","E","W", default "S".}

\item{mortality}{Logical, should low energy levels result in death? Default T.}

\item{write_results}{Logical, save results to csv? Default F.}

\item{single_rast}{Logical, are you using a one-layer raster for all timesteps?. Default F.}
}
\value{
#' A (days X replicates) X 7 dataframe containing data on latitude, longitude, energy,
day, agent ID, distance traveled between each timestep (in km), and change in
energy from last timestep.
}
\description{
Here, agent mortality occurs when agent reaches energy = 0 (out of 100). Agent energy
stores are dynamic, and affect search area as a multiplier, so movement
is directly affected by the quality of raster cells achieved. Results may be visualized
with `energyVIZ()`. Relies on underlying function `energySIM_helper`, which is
not to be used alone.
}
\examples{
# Define species object
pabu.pop = as.species(x=-98.7, y=34.7,
morphpar1=15, morphpar1mean=16, morphpar1sd=2,morphpar1sign="Pos",
morphpar2=19,morphpar2mean=18,morphpar2sd=1,morphpar2sign="Pos")

# Run function
EX1=energySIM(replicates=5,days=27,env_rast=ndvi_raster, search_radius=400,
sigma=.1, dest_x=-108.6, dest_y=26.2, mot_x=.9, mot_y=.9,
modeled_species=pabu.pop,
optimum_lo=.6,optimum_hi=.8,init_energy=100,
direction="S",write_results=FALSE,single_rast=FALSE,mortality = TRUE)
}
